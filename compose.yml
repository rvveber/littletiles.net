services:
  database:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    env_file:
      - .env

  backend:
    image: directus/directus:11.8
    ports:
      - "8055:8055"
    volumes:
      - backend_uploads:/directus/uploads # TODO: set up minio bucket
      - ./backend/migrations:/directus/migrations
    depends_on:
      - database
    networks:
      - app_network
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_CLIENT=pg
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}

      - KEY=${DIRECTUS_KEY}
      - SECRET=${DIRECTUS_SECRET}
      - ADMIN_EMAIL=${DIRECTUS_ADMIN_EMAIL}
      - ADMIN_PASSWORD=${DIRECTUS_ADMIN_PASSWORD}

      - AUTH_PROVIDERS=microsoft
      - AUTH_MICROSOFT_DRIVER=openid
      - AUTH_MICROSOFT_ISSUER_URL=https://login.microsoftonline.com/common/v2.0
      - AUTH_MICROSOFT_TENANT_ID=${DIRECTUS_AUTH_MICROSOFT_TENANT_ID}
      - AUTH_MICROSOFT_CLIENT_ID=${DIRECTUS_AUTH_MICROSOFT_CLIENT_ID}
      - AUTH_MICROSOFT_CLIENT_SECRET=${DIRECTUS_AUTH_MICROSOFT_CLIENT_SECRET}

      - WEBSOCKETS_ENABLED=true

  frontend:
    build:
      context: ./frontend
      target: production
    ports:
      - "3000:3000"
    networks:
      - app_network
    depends_on:
      - backend
    restart: unless-stopped
    env_file:
      - .env

networks:
  app_network:
    driver: bridge

volumes:
  database_data:
  backend_uploads:
